--Lag and Lead functions

--Identify null rows 
SELECT * 
FROM trading.daily_btc
--Propogation of nulls 
WHERE (
  open_price + high_price + low_price + 
  close_price + adjusted_close_price + volume
) IS NULL;

--Storing the null values 
-- WHERE market_date IN (
--   '2020-04-17',
--   '2020-10-09',
--   '2020-10-12',
--   '2020-10-13'
-- )

--Inspecting one of the null values 
--Data Before and After 
SELECT * FROM trading.daily_btc
WHERE market_date BETWEEN ('2020-04-17'::DATE-1)
    AND ('2020-04-17'::DATE+1)

--Null value filling methods 
--Using LAG function to fill in the missing values 
SELECT 
  market_date,
  open_price,
  LAG(open_price,1) OVER (ORDER BY market_date) AS lag_open_price
FROM trading.daily_btc
WHERE market_date BETWEEN('2020-04-17'::DATE - 1) 
  AND ('2020-04-17'::DATE + 1);

SELECT 
  market_date,
  open_price,
  LAG(open_price,1,6000::NUMERIC) OVER (ORDER BY market_date) AS lag_open_price
FROM trading.daily_btc
WHERE market_date BETWEEN('2020-04-17'::DATE - 1)
  AND ('2020-04-17'::DATE + 1);

--or we can use COALESCE() to update null rows 
--COALESCE() to update null rows 
WITH april_17_data AS (
SELECT 
  market_date,
  open_price,
  LAG(open_price) OVER (ORDER BY market_date) AS lag_open_price
FROM trading.daily_btc
WHERE market_date BETWEEN ('2020-04-17'::DATE-1) AND 
  ('2020-10-17'::DATE+1)
)

SELECT 
  market_date,
  open_price,
  lag_open_price,
  COALESCE(open_price, lag_open_price) AS coalesce_open_price
FROM april_17_data
LIMIT 10;


--Updating all the null values at once 
DROP TABLE IF EXISTS updated_daily_btc;
CREATE TEMP TABLE updated_daily_btc AS 
SELECT 
  market_date,
  COALESCE(
    open_price,
    LAG(open_price) OVER (ORDER BY market_date)
  ) AS open_price,
  COALESCE(
    high_price,
    LAG(high_price) OVER (ORDER BY market_date)
  ) AS high_price,
  COALESCE(
    low_price,
    LAG(low_price) OVER (ORDER BY market_date)
  ) AS low_price,
  COALESCE(
    close_price,
    LAG(open_price) OVER (ORDER BY market_date)
  ) AS close_price,
  COALESCE(
    adjusted_close_price,
    LAG(open_price) OVER (ORDER BY market_date)
  ) AS adjusted_close_price,
  COALESCE(
    volume,
    LAG(volume) OVER (ORDER BY market_date)
  ) AS volume
FROM trading.daily_btc;

--Test that our previously missing value are filled !
SELECT * 
FROM updated_daily_btc 
WHERE market_date IN (
  '2020-04-17',
  '2020-10-09',
  '2020-10-12',
  '2020-10-13'
);

--Inspecting the newly created table as 2020-10-13 is null
SELECT * 
FROM updated_daily_btc 
WHERE market_date BETWEEN '2020-10-10'::DATE
  AND '2020-10-14'::DATE;
--Inspecting the original dataset as 2020-10-13 is null
SELECT * 
FROM trading.daily_btc
WHERE market_date BETWEEN '2020-10-10'::DATE 
  AND '2020-10-14'::DATE ;

-- As there is not data for 2020-10-12 we will use LAG() with 
--OFFSET INPUT of 2
SELECT 
  market_date,
  open_price,
  COALESCE(
    open_price,
      LAG(open_price,1) OVER (ORDER BY market_date),
      LAG(open_price,2) OVER (ORDER BY market_date)
  ) AS adj_open_price 
FROM trading.daily_btc
WHERE market_date BETWEEN '2020-10-10'::DATE 
  AND '2020-10-13';

--Delete and Insert 
--Deleting the null value 
DROP TABLE IF EXISTS  testing_updated_daily_btc;
CREATE TEMP TABLE testing_updated_daily_btc AS  
  TABLE updated_daily_btc;

DELETE FROM testing_updated_daily_btc
WHERE market_date = '2020-10-13'
RETURNING *;

--Filling in the null values 
WITH calculated_values AS (
SELECT 
  market_date,
  COALESCE(
    open_price,
    LAG(open_price,1) OVER (ORDER BY market_date),
    LAG(open_price,2) OVER (ORDER BY market_date)
  ) AS open_price,
  COALESCE(
    high_price,
    LAG(high_price,1) OVER (ORDER BY market_date),
    LAG(high_price,2) OVER (ORDER BY market_date)
  ) AS high_price,
  COALESCE(
    low_price,
    LAG(low_price,1) OVER (ORDER BY market_date),
    LAG(low_price,2) OVER (ORDER BY market_date)
  ) AS low_price,
  COALESCE(
    close_price,
    LAG(close_price,1) OVER (ORDER BY market_date),
    LAG(close_price,2) OVER (ORDER BY market_date)
  ) AS close_price,
  COALESCE(
    adjusted_close_price,
    LAG(adjusted_close_price,1) OVER (ORDER BY market_date),
    LAG(adjusted_close_price,2) OVER (ORDER BY market_date)
  ) AS adjusted_close_price,
  COALESCE(
    volume,
    LAG(volume,1) OVER (ORDER BY market_date),
    LAG(volume,2) OVER (ORDER BY market_date)
  ) AS volume
FROM trading.daily_btc
WHERE market_date BETWEEN '2020-10-11'::DATE 
  AND '2020-10-13'::DATE 
)

SELECT * 
FROM calculated_values 
WHERE market_date = '2020-10-13';


INSERT INTO testing_updated_daily_btc
WITH calculated_values AS (
SELECT 
  market_date,
  COALESCE(
    open_price,
    LAG(open_price,1) OVER (ORDER BY market_date),
    LAG(open_price,2) OVER (ORDER BY market_date)
  ) AS open_price,
  COALESCE(
    high_price,
    LAG(high_price,1) OVER (ORDER BY market_date),
    LAG(high_price,2) OVER (ORDER BY market_date)
  ) AS high_price,
  COALESCE(
    low_price,
    LAG(low_price,1) OVER (ORDER BY market_date),
    LAG(low_price,2) OVER (ORDER BY market_date)
  ) AS low_price,
  COALESCE(
    close_price,
    LAG(close_price,1) OVER (ORDER BY market_date),
    LAG(close_price,2) OVER (ORDER BY market_date)
  ) AS close_price,
  COALESCE(
    adjusted_close_price,
    LAG(adjusted_close_price,1) OVER (ORDER BY market_date),
    LAG(adjusted_close_price,2) OVER (ORDER BY market_date)
  ) AS adjusted_close_price,
  COALESCE(
    volume,
    LAG(volume,1) OVER (ORDER BY market_date),
    LAG(volume,2) OVER (ORDER BY market_date)
  ) AS volume
FROM trading.daily_btc
WHERE market_date BETWEEN '2020-10-11'::DATE 
    AND '2020-10-13'::DATE 
)

SELECT * 
FROM calculated_values 
WHERE market_date = '2020-10-13'
RETURNING * ;


DROP TABLE IF EXISTS testing_updated_daily_btc;
CREATE TEMP TABLE tesing_updated_daily_btc AS 
  TABLE updated_daily_btc;
  
DELETE FROM testing_updated_daily_btc 
WHERE market_date = '2020-10-13'
RETURNING *;

INSERT INTO testing_updated_daily_btc
SELECT 
  '2020-10-12'::DATE AS market_date,
  open_price,
  high_price,
  low_price,
  close_price,
  adjusted_close_price,
  volume
FROM testing_updated_daily_btc
WHERE market_date = '2020-10-12'
RETURNING *;


DROP TABLE IF EXISTS updated_daily_btc;
CREATE TEMP TABLE updated_daily_btc AS 
SELECT 
  market_date,
  COALESCE(
    open_price,
    LAG(open_price,1) OVER w,
    LAG(open_price,2) OVER w
  ) AS open_price,
  COALESCE(
    high_price,
    LAG(high_price,1) OVER w,
    LAG(high_price,2) OVER w
  ) AS high_price,
  COALESCE(
    low_price,
    LAG(low_price,1) OVER w,
    LAG(low_price,2) OVER w
  ) AS low_price,
  COALESCE(
    close_price,
    LAG(close_price,1) OVER w,
    LAG(close_price,2) OVER w
  ) AS close_price,
  COALESCE(
    adjusted_close_price,
    LAG(adjusted_close_price,1) OVER w,
    LAG(adjusted_close_price,2) OVER w
  ) AS adjusted_close_price,
  COALESCE(
    volume,
    LAG(volume,1) OVER w,
    LAG(volume,2) OVER w
  ) AS volume
FROM trading.daily_btc
WINDOW 
  w AS (ORDER BY market_date),
  unused_window AS (ORDER BY market_date DESC);

SELECT * 
FROM updated_daily_btc 
WHERE market_date BETWEEN '2020-10-08'::DATE 
  AND '2020-10-15'::DATE ;
  